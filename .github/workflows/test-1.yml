name: Test-1 Workflow Name

on:
  push:
    branches:
    - playground
    paths:
    - .github/workflows/test-1.yml
  workflow_dispatch:

jobs:
  my-job:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/github-script@HEAD
      with:
        script: |
          const { spawn } = require('child_process')
          
          async function printWithJq(obj, ...args) {
              return new Promise((resolve, reject) => {
                  const jqArgs = ['-C', '-S'].concat(args)
                  const jq = spawn('jq', jqArgs, { stdio: ['pipe', 'pipe', 'pipe'] })
                  let stdout = '', stderr = ''
                  jq.stdout.on('data', (data) => { stdout += data.toString() })
                  jq.stderr.on('data', (data) => { stderr += data.toString() })
                  jq.on('close', (code) => {
                      if (code !== 0) {
                          console.error(`jq process exited with code ${code}`)
                          reject(stderr)
                      } else {
                          console.log('StdOut:', stdout)
                          console.log('StdErr:', stderr)
                          resolve({ stdout, stderr })
                      }
                  })
                  jq.stdin.write(JSON.stringify(obj))
                  jq.stdin.end()
              })
          }
          await printWithJq( { context } )
          await printWithJq( { env: process.env } )

          core.setOutput("script-1-output", "script-1-output-value")

    - uses: actions/github-script@HEAD
      with:
        script: |
          console.debug({context})
          console.debug({env: process.env})
